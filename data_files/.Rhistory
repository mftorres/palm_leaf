install.packages(c("devtools", "dplyr", "ggplot2", "tidytext", "tidyr", "knitr"))
library(devtools)
#library(withr)
#with_libpaths(new = 'C:/Users/xtorrm/R/R-Library/',install_github('amcrisan/Adjutant',force=TRUE))
devtools::install_github("amcrisan/Adjutant")
library(devtools)
#library(withr)
#with_libpaths(new = 'C:/Users/xtorrm/R/R-Library/',install_github('amcrisan/Adjutant',force=TRUE))
devtools::install_github("amcrisan/Adjutant",force=TRUE))
#library(withr)
#with_libpaths(new = 'C:/Users/xtorrm/R/R-Library/',install_github('amcrisan/Adjutant',force=TRUE))
devtools::install_github("amcrisan/Adjutant",force=TRUE)
library(adjutant) #this gets R ready to run Adjutant
library(adjutant) #this gets R ready to run Adjutant
library(dplyr)
library(ggplot2)
library(tidytext)
set.seed(666) #also set a seed - there is some randomness in the analysis.
df<-processSearch("leaf AND (dissection OR shape) AND plant",retmax=1000)
install.packages("snow")
install.packages("phylotR")
devtools::install_github("hannesmuehleisen/MonetDBLite-R")
install.packages("remote")
devtools::install_github("hannesmuehleisen/MonetDBLite-R")
remotes::install_github("ropensci/restez")
install.packages("processx")
devtools::install_github(repo='ropensci/phylotaR', build_vignettes=TRUE)
install.packages("rlang")
devtools::install_github(repo='ropensci/phylotaR', build_vignettes=TRUE)
install.packages("callr")
devtools::install_github(repo='ropensci/phylotaR', build_vignettes=TRUE)
install.packages("poolfstat")
library(poolfstat)
install.packages("poolfstat")
install.packages("poolfstat")
library(poolfstat)
?popsync2pooldata
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/pools_Q20.sync',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 4
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/pools_Q20.sync',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 4
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/pools_Q20.sync',
#poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 4
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/test_error_lines.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/test_tail.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
library(poolfstat)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/test_tail2.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/test_damaged.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/test_damaged.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/test_damaged.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/lines_damaged.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/lines_damaged.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
print(tmp.snpdet)
View(allpools_q20)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/lines_damaged.txt',
poolsizes = c(100,100,100,100), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/lines_damaged.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/lines_damaged.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/lines_damaged2.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/lines_damaged3.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/lines_damaged3.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/lines_damaged3.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 4,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
noindel=TRUE,
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/lines_damaged.txt',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 4,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
noindel=TRUE,
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/pools_Q20.sync',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 1,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
noindel=TRUE,
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/pools_Q20.sync',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 4,
min.cov.per.pool = 10,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
noindel=TRUE,
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/pools_Q20.sync',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 4,
min.cov.per.pool = 10,
max.cov.per.pool = 300,
min.maf = 0.01, # based in poolfstats paper
noindel=TRUE,
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/pools_Q20.sync',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 4,
min.cov.per.pool = 15,
max.cov.per.pool = 300,
min.maf = 0.01, # based in poolfstats paper
noindel=TRUE,
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/pools_Q20.sync',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 4,
min.cov.per.pool = 12,
max.cov.per.pool = 500,
min.maf = 0.01, # based in poolfstats paper
noindel=TRUE,
nthreads = 12
)
allpools_q20<-popsync2pooldata(
sync.file = 'geonoma/poolfst/pools_Q20.sync',
poolsizes = c(92,86,100,92), # vector haploid pool sizes
#poolnames = c(pool1,pool2,pool3,pool4),
min.rc = 4,
min.cov.per.pool = 12,
max.cov.per.pool = 200,
min.maf = 0.01, # based in poolfstats paper
noindel=TRUE,
nthreads = 12
)
setwd("~/palm_leaf/data_files")
library(ape)
library(phytools)
library(MCMCglmmRAM)
install.packages("phytools")
library(phytools)
install.packages("MCMCglmmRAM")
install.packages('C:/Users/mftorres27/Downloads/MCMCglmmRAM_2.24.tar.gz',repos=ALL,type='source')
install.packages('C:/Users/mftorres27/Downloads/MCMCglmmRAM_2.24.tar.gz',repos=NULL,type='source')
install.packages(c("corpcor", "tensorA", "cubature"))
install.packages('C:/Users/mftorres27/Downloads/MCMCglmmRAM_2.24.tar.gz',repos=NULL,type='source')
library(MCMCglmmRAM)
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
dataall<-read.csv("./palms_alltraits_curated_20220620.csv",quote="",sep="\t",header=TRUE)
posdis42<-read.tree("./Clean_1_42presampled.trees")
data_pre<-completeFun(dataall,c('CHELSA_ai_stand', 'CHELSA_bio1_stand', 'CHELSA_bio4_stand', 'CHELSA_bio15_stand', 'StemHeightBladeLength_stand'))
data_pre<-na.omit(object= dataall, cols=c('CHELSA_ai_stand', 'CHELSA_bio1_stand', 'CHELSA_bio4_stand', 'CHELSA_bio15_stand', 'StemHeightBladeLength_stand'))
data_pre$dissection
filter<-c("entire","dissection")
data_hp1a<-subset(data_pre,shape %in% filter)
rownames(data_hp1a) <- data_hp1a$tip_name
data_hp1a$dissection<-factor(data_hp1a$dissection)
data_hp1a$CHELSA_ai_stand<-as.numeric(data_hp1a$CHELSA_ai_stand)
data_hp1a$CHELSA_bio1_stand<-as.numeric(data_hp1a$CHELSA_bio1_stand)
data_hp1a$CHELSA_bio4_stand<-as.numeric(data_hp1a$CHELSA_bio4_stand)
data_hp1a$CHELSA_bio15_stand<-as.numeric(data_hp1a$CHELSA_bio15_stand)
data_hp1a$StemHeightBladeLength_stand<-as.numeric(data_hp1a$StemHeightBladeLength_stand)
tree1<-posdis42[[1]]
missingspp<-setdiff(sort(tree1$tip.label),sort(data_hp1a$tip_name))
data_hp1a$animal <- factor(data_hp1a$tip_name)
Nburn <- 9000
Nnitt <- 20000000
Nthin <- 5000
k <- 2
I <- diag(k-1)
J <- matrix(rep(1, (k-1)^2), c(k-1, k-1))
priors<-list(R=list(V=(1/k)*(I+J), fix=1), G=list(G1=list(V=diag(k-1), nu=0.002)))
